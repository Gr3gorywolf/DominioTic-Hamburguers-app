// <auto-generated />
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(HamburguerContext))]
    partial class HamburguerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Backend.Entities.Models.Hamburguer", b =>
                {
                    b.Property<int>("HamburguerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("RestaurantId");

                    b.HasKey("HamburguerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Hamburguers");
                });

            modelBuilder.Entity("Backend.Entities.Models.HamburguersIngredient", b =>
                {
                    b.Property<int>("HamburguersIngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HamburguerId");

                    b.Property<int>("IngredientId");

                    b.HasKey("HamburguersIngredientId");

                    b.HasIndex("HamburguerId");

                    b.HasIndex("IngredientId");

                    b.ToTable("HamburguersIngredients");
                });

            modelBuilder.Entity("Backend.Entities.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Mesure");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Backend.Entities.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Backend.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Entities.Models.UsersHamburguer", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("HamburguerId");

                    b.Property<int>("UsersHamburguerId");

                    b.HasKey("UserId", "HamburguerId");

                    b.HasIndex("HamburguerId");

                    b.ToTable("UsersHamburguers");
                });

            modelBuilder.Entity("Backend.Entities.Models.Hamburguer", b =>
                {
                    b.HasOne("Backend.Entities.Models.Restaurant", "Restaurant")
                        .WithMany("Hamburguers")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backend.Entities.Models.HamburguersIngredient", b =>
                {
                    b.HasOne("Backend.Entities.Models.Hamburguer", "Hamburguer")
                        .WithMany("HamburguersIngredients")
                        .HasForeignKey("HamburguerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Backend.Entities.Models.Ingredient", "Ingredient")
                        .WithMany("HamburguersIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backend.Entities.Models.UsersHamburguer", b =>
                {
                    b.HasOne("Backend.Entities.Models.Hamburguer", "Hamburguer")
                        .WithMany("UsersHamburguers")
                        .HasForeignKey("HamburguerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Backend.Entities.Models.User", "User")
                        .WithMany("UsersHamburguers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
